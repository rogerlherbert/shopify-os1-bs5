{% assign current_variant = product.selected_or_first_available_variant %}

<div id="productImagesCarousel" class="carousel slide d-sm-none">
  <div class="carousel-indicators">
    {% assign slideCounter = 1 %}
    {% for image in product.images %}
      <button type="button" data-bs-target="#productImagesCarousel" data-bs-slide-to="{{ slideCounter | minus: 1 }}"{% if forloop.first == true %} class="active"{% endif%} aria-current="true" aria-label="Slide {{ slideCounter }}"></button>
      {% assign slideCounter = slideCounter | plus: 1 %}
    {% endfor %}
  </div>
  <div class="carousel-inner">
    {% for image in product.images %}
      <div class="carousel-item{% if forloop.first == true %} active{% endif%}">
        <img src="{{ image.src | img_url: '576x', scale: 2 }}" class="d-block img-fluid" width="{{ image.width }}" height="{{ image.height }}"{% unless image.attached_to_variant? %} loading="lazy"{% else %} loading="auto"{% endunless %} alt="{{ image.alt | escape }}">
      </div>
    {% endfor %}
  </div>
</div>

<div class="container">
  <div class="row g-0 mb-3">

    <div class="col-sm-7 mb-3">
      <div id="productImagesGrid" class="d-none d-sm-flex flex-column">
      {% for image in product.images %}
        <img src="{{ image.src | img_url: '768x', scale: 2 }}" class="img-fluid" id="productImage-{{ image.position }}" width="{{ image.width }}" height="{{ image.height }}"{% unless image.attached_to_variant? %} loading="lazy"{% else %} loading="auto"{% endunless %} alt="{{ image.alt | escape }}">
      {% endfor %}
      </div>
    </div>

    <div class="col-sm-5">
      <div class="mx-sm-5 position-sticky" style="top: 120px;">

        <div class="xx-breadcrumbs text-center"><small><a class="xx-breadcrumbs__link" href="{{ routes.root_url }}">Home</a> / {% if collection %}<a class="xx-breadcrumbs__link" href="{{ collection.url }}">{{ collection.title }}</a> /{% endif %}</small></div>

        <h1 class="text-uppercase text-center">{{ product.title }}</h1>

        <p class="text-center mb-5">
          <span id="priceBlock">
          {% if current_variant.compare_at_price > current_variant.price %}
            <span id="variantPrice">{{ current_variant.price | money_without_trailing_zeros }}</span>
            <s><span id="variantCompareAtPrice">{{ current_variant.compare_at_price | money_without_trailing_zeros }}</span></s>
          {% else %}
            <span id="variantPrice">{{ current_variant.price | money_without_trailing_zeros }}</span>
          {% endif %}
          </span>

          {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
          <small class="text-secondary"><br>
            {%- if cart.taxes_included -%}
            Taxes included.&nbsp;
            {%- endif -%}

            {%- if shop.shipping_policy.body != blank -%}
            Shipping calculated at checkout.
            {%- endif -%}
          </small>
          {%- endif -%}
        </p>

        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
          {% unless product.has_only_default_variant %}
          <div class="mb-3">
            <select name="id" id="productSelect" class="form-select">
              {% for variant in product.variants %}
                {% if variant.available %}
                  <option value="{{ variant.id }}">
                    {{ variant.title }} - {{ variant.price | money_with_currency }}
                  </option>
                {% else %}
                  <option disabled="disabled">
                    {{ variant.title }} - sold out
                  </option>
                {% endif %}
              {% endfor %}
            </select>
          </div>

          {% else %}
          <input name="id" value="{{ current_variant.id }}" type="hidden">

          {% endunless %}

          <div class="d-grid gap-2 mb-3">
            <button type="submit" name="add" id="AddToCart" class="btn btn-primary btn-lg"{% unless current_variant.available %} disabled="disabled"{% endunless %}>{% if current_variant.available %}Add to cart{% else %}Out Of Stock{% endif %}</button>
            {% if additional_checkout_buttons %}
              <div class="additional_checkout_buttons">{{ content_for_additional_checkout_buttons }}</div>
            {% endif %}
          </div>
        </form>

        <script src="{{ 'option_selection.js' | shopify_asset_url }}" defer></script>
        <script>
          let selectCallback = function(variant, selector) {
            // update availability, price and image when variant changes
            if (typeof variant !== "undefined" && variant !== null) {

              if (variant.available) {
                // variant available
                enableSubmitButton();

                // TODO - change price
                changePrice(variant.price, variant.compare_at_price);

                if (variant.featured_image !== null) {
                  scrollCarouselToVariantImage(variant.featured_image.position - 1);
                  replaceFeaturedImageWithVariantImage(variant.featured_image);
                }

              } else {
                // defined, but not available
                disableSubmitButton();

                // TODO - change price
                changePrice(variant.price, variant.compare_at_price);

                if (variant.featured_image !== null) {
                  scrollCarouselToVariantImage(variant.featured_image.position - 1);
                  replaceFeaturedImageWithVariantImage(variant.featured_image);
                }
              }

            } else {
              // undefined or null
              disableSubmitButton();

            }
          }

          function disableSubmitButton() {
            let btn = document.querySelector("#AddToCart");
            btn.setAttribute("disabled","");
            btn.textContent = "Out Of Stock";
          }

          function enableSubmitButton() {
            let btn = document.querySelector("#AddToCart");
            btn.removeAttribute("disabled","");
            btn.textContent = "Add To Cart";
          }

          function scrollCarouselToVariantImage(position) {
            let myCarousel = document.querySelector('#productImagesCarousel');
            let carousel = new bootstrap.Carousel(myCarousel, {
              interval: false,
              ride: false
            });

            carousel.to(position);
          }

          function replaceFeaturedImageWithVariantImage(variant_image) {
            let product_images_arr = document.querySelectorAll('#productImagesGrid img');
            let variant_image_el = document.querySelector('#productImage-' + variant_image.position);

            product_images_arr.forEach(function(item) {
              item.classList.remove("order-first");
            });

            variant_image_el.classList.add("order-first");
          }

          function changePrice(unformatted_price, unformatted_compare_at_price) {

            let price_block_el = document.querySelector("#priceBlock");
            let format_param = "{{ cart.currency.symbol }}{% raw %}{{ amount_no_decimals }}{% endraw %}";
            let display_price = Shopify.formatMoney(unformatted_price, format_param);
            let display_price_el = document.createElement("span");

            display_price_el.setAttribute("id", "variantPrice");
            display_price_el.textContent = display_price;

            if (unformatted_compare_at_price !== null && unformatted_compare_at_price > unformatted_price) {
              let compare_at_price = Shopify.formatMoney(unformatted_compare_at_price, format_param);
              let compare_at_price_el = document.createElement("span");
              let strikethrough_el = document.createElement("s");

              compare_at_price_el.setAttribute("id", "variantCompareAtPrice");
              compare_at_price_el.textContent = compare_at_price;
              strikethrough_el.append(compare_at_price_el);

              price_block_el.replaceChildren(display_price_el, strikethrough_el);

            } else {
              price_block_el.replaceChildren(display_price_el);

            }
          }

          function addBootstrapClassesToForm() {
            // add bootstrap layout classes to new form controls
            let inputGroups = document.querySelectorAll("#AddToCartForm .selector-wrapper");

            inputGroups.forEach(element => {
              let inputLabel = element.querySelector("label");
              let inputSelect = element.querySelector(".single-option-selector");

              element.classList.add("mb-3");

              if (inputLabel !== null) {
                inputLabel.classList.add("form-label");
              }

              if (inputSelect !== null) {
                inputSelect.classList.add("form-select");
              }
            });
          }

          // wait for option_selection.js deferred loading
          document.addEventListener('DOMContentLoaded', function(event) {
            new Shopify.OptionSelectors('productSelect', {
              product: {{ product | json }},
              onVariantSelected: selectCallback,
              enableHistoryState: true
            });

            addBootstrapClassesToForm();
          })
        </script>

        <div class="my-5">{{ product.description }}</div>

      </div>
    </div>
  </div>

  {% assign feature_image = images['1200x900.png'] %}

  <div class="row g-0">
    <div class="col-sm-6">
      <picture>
        <source srcset="{{ feature_image | img_url: '800x600', scale: 2, crop: 'center' }}" media="(min-width: 576px)">
        <img class="img-fluid" loading="lazy" width="{{ feature_image.width }}" height="{{ feature_image.height }}" src="{{ feature_image | img_url: '400x300', scale: 2, crop: 'center' }}" alt="{{ feature_image.alt | escape }}">
      </picture>
    </div>
    <div class="col-sm-6">
      <div class="h-100 p-5 d-flex flex-column justify-content-center text-center">
        <h3>This is a feature</h3>
        <p>This is some text that talks about the feature with nice SEO-rich keywords included.</p>
      </div>
    </div>
  </div>

  <div class="row g-0">
    <div class="col-sm-6">
      <picture>
        <source srcset="{{ feature_image | img_url: '800x600', scale: 2, crop: 'center' }}" media="(min-width: 576px)">
        <img class="img-fluid" loading="lazy" width="{{ feature_image.width }}" height="{{ feature_image.height }}" src="{{ feature_image | img_url: '400x300', scale: 2, crop: 'center' }}" alt="{{ feature_image.alt | escape }}">
      </picture>
    </div>
    <div class="col-sm-6 order-sm-first">
      <div class="h-100 p-5 d-flex flex-column justify-content-center text-center">
        <h3>This is a feature</h3>
        <p>This is some text that talks about the feature with nice SEO-rich keywords included.</p>
      </div>
    </div>
  </div>

  <div class="row g-0">
    <div class="col-sm-6">
      <picture>
        <source srcset="{{ feature_image | img_url: '800x600', scale: 2, crop: 'center' }}" media="(min-width: 576px)">
        <img class="img-fluid" loading="lazy" width="{{ feature_image.width }}" height="{{ feature_image.height }}" src="{{ feature_image | img_url: '400x300', scale: 2, crop: 'center' }}" alt="{{ feature_image.alt | escape }}">
      </picture>
    </div>
    <div class="col-sm-6">
      <div class="h-100 p-5 d-flex flex-column justify-content-center text-center">
        <h3>This is a feature</h3>
        <p>This is some text that talks about the feature with nice SEO-rich keywords included.</p>
      </div>
    </div>
  </div>

  <hr class="my-5 invisible">
  {% section 'product-recommendations' %}
</div>

{% render 'json-ld-product', product: product %}